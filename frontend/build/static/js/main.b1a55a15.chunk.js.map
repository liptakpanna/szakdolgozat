{"version":3,"sources":["InputField.js","SubmitButton.js","LoginForm.js","Common.js","NavBar.js","PreviousPageIcon.js","IgvBrowser.js","Home.js","AdminUsers.js","AdminAddUser.js","EditUser.js","Profile.js","Alignments.js","CreateAlignment.js","EditAlignment.js","NotFound.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["InputField","className","this","props","label","class","type","placeholder","value","onChange","e","target","maxLength","required","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","username","password","buttonDisabled","show","errormessage","adminEmail","getAdminEmail","property","trim","length","setState","fetch","process","method","headers","response","json","result","console","log","status","message","emails","JSON","stringify","substring","body","localStorage","setItem","Cookie","set","jwttoken","id","role","history","push","resetForm","style","backgroundColor","onSubmit","preventDefault","setInputValue","doLogin","color","num","bg","checkJwtToken","a","get","logout","alert","validateEmail","email","test","NavBar","getItemClass","bind","name","active","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","getItem","PreviousPageIcon","item","hist","where","data-toogle","data-placement","title","download","require","IgvBrowser","isLoggedIn","location","open","igvContainer","document","getElementById","igvOptions","reference","fastaURL","referenceUrl","tracks","getTracks","igv","createBrowser","tracksForIgv","x","bamUrls","url","indexed","format","owner","updatedAt","Moment","updatedBy","then","resp","blob","lastIndexOf","width","addEditButton","aria-multiselectable","data-parent","aria-labelledby","aligner","visibility","createdAt","addUpdated","marginTop","description","map","bam","index","key","downloadBamFile","to","Home","AdminUsers","items","showError","onEditClick","getUsers","Headers","catch","error","event","isAdmin","origin","locale","scope","createdBy","AdminAddUser","handleDropdownChange","addUser","EditUser","handleClose","handleShow","replacer","_","isEqual","isChanged","Modal","onHide","Header","closeButton","Title","Footer","deleteUser","addModal","addRoleDropdown","editUser","addDeleteButton","Profile","getUser","checkIfUpdated","Alignments","viewAlignment","getAlignments","size","centered","Body","getBaseHtml","CreateAlignment","isLoading","referenceFile","readFile","file","radio","specific","mismatch","penalty","maxHits","maxDist","referencId","refType","references","userAccess","usernames","trackCount","acceptedFormat","getReferences","getUsernames","files","data","FormData","append","isPaired","toUpperCase","upload","includes","max","currentTarget","accept","onChangeHandler","htmlFor","btnclass","reads","read","splice","newRead","i","checked","setValueForRead","min","multiple","addOptions","addOptionNames","nameChangeHandler","rows","onRadioChange","showReferenceUpload","showReferenceExample","addTrackInputs","addUserAccessList","onClickHandler","usernameAccessList","deleteAlignment","editAlignment","NotFound","Routes","parse","path","component","EditAlignment","exact","from","App","observer","Boolean","window","hostname","match","config","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1a55a15.chunk.js","sourcesContent":["import React from 'react';\n\nclass InputField extends React.Component{\n\n    render() {\n        return(\n            <div className=\"form-group\">\n                <label className='col-form-label'>{this.props.label}</label>\n                <input \n                    className={\"form-control \" + (this.props.class ? this.props.class : \"\")}\n                    type={this.props.type}\n                    placeholder={this.props.placeholder}\n                    value={this.props.value}\n                    onChange={ (e) => this.props.onChange(e.target.value)}\n                    maxLength={this.props.maxLength ? this.props.maxLength : \"12\"}\n                    required={this.props.required ? this.props.required : false}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputField;","import React from 'react';\n\nclass SubmitButton extends React.Component{\n\n    render() {\n        return(\n            <div className=\"submitButton\">\n                <button \n                    className={'btn ' + this.props.type} \n                    disabled={this.props.disabled}\n                    onClick={ () => this.props.onClick() }\n                >\n                    {this.props.text}\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton;","import React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport Cookie from \"js-cookie\";\nimport ParticlesBg from 'particles-bg';\n\nclass LoginForm extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false,\n            show: false,\n            errormessage: \"Cannot connect to server. Please try again later.\",\n            adminEmail: []\n        }\n    }\n\n    componentDidMount(){\n        this.getAdminEmail();\n    }\n\n    setInputValue(property, value) {\n        value = value.trim();\n        if (value.length > 12) {\n            return;\n        }\n        this.setState({\n            [property]: value\n        })\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async getAdminEmail(){\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/forgotpassword', {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            let result = await response.json();\n            if (result){\n                console.log(result);\n                if(result.status === 500) {\n                    this.setState({show:true});\n                    this.setState({errormessage: result.message})\n                }\n                else {\n                    let emails = JSON.stringify(result);\n                    this.setState({adminEmail: emails.substring(1,emails.length-1)})\n                }\n            }\n        }\n        catch(e) {\n            console.log(e)\n        }\n    }\n\n    async doLogin() {\n        if (!this.state.username) {return;}\n        if (!this.state.password) {return;}\n\n        this.setState({buttonDisabled: true})\n\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/authenticate', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            })\n\n            let result = await response.json();\n            if (result){\n                console.log(result);\n                if(result.status === 403) {\n                    this.setState({errormessage: \"Wrong username password combination. If you have forgotten your password please contact an admin: \" + this.state.adminEmail})\n                    this.setState({show:true});\n                    this.setState({buttonDisabled: false})\n                }\n                else if(result.status === 500) {\n                    this.setState({show:true});\n                    this.setState({errormessage: result.message})\n                    this.setState({buttonDisabled: false})\n                }\n                else {\n                    localStorage.setItem(\"isLoggedIn\", true);\n                    Cookie.set(\"jwtToken\", result.jwttoken)\n                    localStorage.setItem(\"username\", this.state.username);\n                    localStorage.setItem(\"id\", result.id);\n                    localStorage.setItem(\"role\", result.role);\n\n                    this.props.history.push('/home')\n                }\n            }\n        }\n        catch(e) {\n            this.setState({show:true});\n            this.setState({errormessage: \"Cannot connect to server, please try again later.\"})\n            console.log(e)\n            this.resetForm();\n        }\n    }\n\n    render() {\n        return(\n            <>\n            <div className=\"container p-5\" style={{backgroundColor: \"#e3f2fd\"}} >\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <h1>\n                        Welcome!\n                    </h1>\n                    <InputField\n                        type='text'\n                        class=\"w-50\"\n                        placeholder='Enter username'\n                        value={this.state.username ? this.state.username : ''}\n                        onChange= { (value) => this.setInputValue('username', value)}\n                        label ='Username'\n                        required={true}\n                    />\n                    <InputField\n                        type='password'\n                        class=\"w-50\"\n                        placeholder='Enter password'\n                        value={this.state.password ? this.state.password : ''}\n                        onChange= { (value) => this.setInputValue('password', value)}\n                        label ='Password'\n                        required={true}\n                    />\n                    <br/>\n                    <SubmitButton\n                        text='Login'\n                        type='btn-primary btn-lg'\n                        disabled={this.state.buttonDisabled}\n                        onClick={ () => this.doLogin()}\n                    />\n                </form>\n        { this.state.show ? <div className=\"alert alert-danger mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n            </div>\n            <ParticlesBg color=\"#acd7fa\" num={100} type=\"cobweb\" bg={true} />\n            </>\n        );\n    }\n}\n\nexport default LoginForm;","import Cookie from \"js-cookie\"\n\nexport async function checkJwtToken() {\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/validate', {\n                method: 'get',\n                headers: {\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                }\n            })\n\n            let result = await response.json();\n            console.log(result);\n            if (result != null){\n                if(result === false)\n                    logout();\n                return result;\n            }\n            else {\n                alert(\"Something went wrong.\")\n            }\n        }\n        catch(e) {\n            logout();\n            console.log(\"Cannot connect to server. \" + e);\n            return false;\n        }\n        return false;\n}\n\nexport function logout() {\n    Cookie.set(\"jwtToken\", null);\n    localStorage.setItem(\"username\", \"\");\n    localStorage.setItem(\"id\", \"\");\n    localStorage.setItem(\"role\", \"\");\n    console.log(\"Logged out\");\n}\n\nexport function validateEmail (email) {\n    const regexp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regexp.test(email);\n}","import React from 'react';\nimport {logout} from './Common';\n\nimport 'bootstrap/dist/js/bootstrap.js';\n\nclass NavBar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.getItemClass= this.getItemClass.bind(this);\n    }\n\n    getItemClass(name){\n        if(this.props.active === name)\n            return \"nav-item active_nav\"\n        else\n            return \"nav-item\"\n    }\n\n    render() {\n            return(\n                <nav className=\"navbar navbar-expand-md fixed-top navbar-light\" style={{backgroundColor: \"#e3f2fd\"}}>\n                    <div className=\"container\">\n                        <div className=\"navbar-header\">\n                            <a className=\"navbar-brand \" href=\"/home\">DNA</a>\n                            <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                        </div>\n                        <div className=\"navbar-collapse collapse\" id=\"navbarCollapse\">\n                            <ul className=\"nav navbar-nav mr-auto\">\n                                <li className={this.getItemClass(\"home\")}><a className=\"nav-link\" href=\"/home\">Home</a> </li>\n                                <li className={this.getItemClass(\"alignments\")}> <a className=\" nav-link\" href=\"/alignments\">Alignments</a></li>\n                                {localStorage.getItem(\"role\") === \"ADMIN\" ? <li className={this.getItemClass(\"users\")}><a className=\" nav-link\" href=\"/users\">Users</a></li> : null}\n                                <li className={this.getItemClass(\"profile\")}><a className=\"nav-link\" href=\"/profile\">Profile</a></li>\n                            </ul>\n                            <ul className=\"nav navbar-nav navbar-right\">\n                                <li className=\"nav-item mr-5\"><span className=\"navbar-text\">User: {localStorage.getItem(\"username\")}</span></li>\n                                <li className=\"nav-item\"><a className=\"nav-link nav-logout\" href=\"/login\" onClick={ () =>logout()}>Logout</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            );\n    }\n}\n\nexport default NavBar;","import React from 'react';\n\nclass PreviousPageIcon extends React.Component{\n\n    onClick(e) {\n        if(this.props.item !== null)\n            this.props.hist.push(this.props.where, {item : this.props.item});\n        else\n            this.props.hist.push(this.props.where);\n    }\n\n    render() {\n        return(\n            <i className=\"fa fa-angle-left fa-2x mr-3 pointer\" data-toogle=\"tooltip\" data-placement=\"right\" title=\"Previous page\" onClick={(e) => this.onClick(e)}></i>\n        )\n    }\n\n}\n\nexport default PreviousPageIcon;\n","import React, { Component } from 'react';\nimport igv from 'igv/dist/igv.esm.min.js';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport Moment from 'moment';\nimport PreviousPageIcon from './PreviousPageIcon';\nimport Cookie from \"js-cookie\";\nimport {checkJwtToken} from './Common';\n\nlet download = require('downloadjs/download.min.js');\n\nclass IgvBrowser extends Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        isLoggedIn: true,\n        item: (this.props.location.state ? this.props.location.state.item : null),\n        open: false\n      }\n\n    }\n\n    async componentDidMount() {\n      this.setState({isLoggedIn: await checkJwtToken()});\n      if(this.state.item) {\n        if(this.state.item) {\n        var igvContainer = document.getElementById('igv-div');\n        var igvOptions =\n        {\n            reference: {\n                id: this.state.item.name,\n                fastaURL: this.state.item.referenceUrl,\n                headers: {\"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")}\n            },\n            tracks: this.getTracks()\n        };\n\n        return igv.createBrowser(igvContainer, igvOptions);\n        }\n      }\n    }\n\n    getTracks(){\n      var tracksForIgv = [];\n      for(var x = 0; x < this.state.item.bamUrls.length; x++) {\n        tracksForIgv.push({\n          \"url\": this.state.item.bamUrls[x].url,\n          indexed: true,\n          format: \"bam\",\n          name: this.state.item.bamUrls[x].name,\n          headers: {\"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")}\n        });\n      }\n      console.log(tracksForIgv);\n      return tracksForIgv;\n    }\n\n    addEditButton(){\n      if(localStorage.getItem(\"username\") === this.state.item.owner || localStorage.getItem(\"role\") === 'ADMIN')\n      {\n        return(\n          <div className=\"p-2 w-25\">\n            <button className='btn btn-outline-secondary btn-lg w-100' onClick={ () => this.props.history.push('/alignments/edit',  {item : this.state.item})}>Edit</button>\n          </div>\n        );\n      }\n    }\n\n    addUpdated() {\n      if(this.state.item.updatedAt) {\n        return(            \n          <>\n          <p className=\"card-text\"><strong>Updated At:</strong> {this.state.item.updatedAt ? Moment(this.state.item.updatedAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"}</p>\n          <p className=\"card-text\"><strong>Updated By:</strong> {this.state.item.updatedBy}</p>\n          </>\n          );\n      }\n    }\n\n    async downloadBamFile(url) {\n      return fetch(url, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + Cookie.get(\"jwtToken\")\n        }\n      }).then(function(resp) {\n        return resp.blob();\n      }).then(function(blob) {\n        download(blob, url.substring(url.lastIndexOf(\"/\"), url.length));\n      });\n    }\n  \n    render() {\n      if(this.state.isLoggedIn) {\n        if(!this.state.item) {\n          return(\n              <Redirect to=\"/alignments\" />\n          );\n        }\n        return (<div className=\"container\">\n            <NavBar active=\"alignments\"/>\n            <div className=\"container\">\n              <div className=\"container\">\n                <PreviousPageIcon\n                            where={'/alignments'}\n                            hist={this.props.history}\n                        />\n                <div className=\"d-inline-flex justify-content-between\" style={{width: \"95%\"}}>\n                  <div className=\"p-2\"><h1 className=\"d-inline-block\">IGV Genome browser</h1></div>\n                  {this.addEditButton()}\n                </div>\n              </div>\n              <br/>\n              <div className=\"accordion md-accordion\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\">\n                <div className=\"card\">\n                  <div className=\"card-header\" role=\"tab\" id=\"headingOne1\" style={{backgroundColor: \"#e3f2fd\"}} \n                  onClick={() => this.setState({open: !this.state.open})}>\n                    <a data-toggle=\"collapse\" data-parent=\"#accordionEx\" href=\"#collapseOne1\" aria-expanded=\"true\" aria-controls=\"collapseOne1\">\n                      <h5 className=\"mb-0\">\n                      {this.state.item.name} <i className={\"fa fa-angle-\" + (this.state.open ? \"down\" : \"right\")}></i>\n                      </h5>\n                    </a>\n                  </div>\n                  <div id=\"collapseOne1\" className={\"collapse \" + (this.state.open ? \"show\" : \"\")} role=\"tabpanel\" aria-labelledby=\"headingOne1\"\n                    data-parent=\"#accordionEx\">\n                    <div className=\"card-body\">\n                      <div className=\"row\">\n                        <div className=\"col\">\n                          <p className=\"card-text\"><strong>Aligner:</strong> {this.state.item.aligner}</p>\n                          <p className=\"card-text\"><strong>Owner:</strong> {this.state.item.owner}</p>\n                          <p className=\"card-text\"><strong>Visibility:</strong> {this.state.item.visibility}</p>\n                        </div>\n                        <div className=\"col\">\n                          <p className=\"card-text\"><strong>Created At:</strong> {this.state.item.createdAt ? Moment(this.state.item.createdAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"}</p>\n                          {this.addUpdated()}\n                        </div>\n                      </div>\n                      <p className=\"card-text\" style={{marginTop: \"1rem\"}}><strong>Description:</strong> {this.state.item.description}</p>\n                      <p className=\"card-text mb-0\"><strong>Download bam files:</strong> </p>\n                      <div className=\"d-flex flex-wrap\">\n                        {this.state.item.bamUrls.map(function(bam,index) {\n                          return <div className=\"p-2\" key={index}>\n                            <button className=\"btn btn-outline-primary\" onClick={() => this.downloadBamFile(bam.url)}>Track: {bam.name}</button>\n                            </div>\n                        }, this)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <br/>\n              <div className='igvContainer'>\n                  <div id=\"igv-div\"></div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n      else { \n          return(\n              <Redirect to=\"/login\" />\n          );\n      }\n    }\n  }\n\n  export default IgvBrowser;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport {checkJwtToken} from './Common';\n\nclass Home extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoggedIn : true,\n        }\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            return(\n                <NavBar active=\"home\"/>\n            );\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default Home;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport SubmitButton from './SubmitButton';\nimport Moment from 'moment';\nimport {checkJwtToken} from './Common';\nimport Cookie from \"js-cookie\";\n\nclass AdminUsers extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            items: [],\n            showError: false,\n            errormessage: null\n        }\n        this.onEditClick = this.onEditClick.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({isLoggedIn: await checkJwtToken()});\n        this.getUsers();\n    }\n\n    async getUsers() {\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/list', {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n\n                })\n            }).catch(error =>  {\n                this.setState({errormessage: \"Cannot connect to server\"})   \n                this.setState({showError:true});\n                console.log(\"Cannot connect to server\");\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})   \n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.setState({items: result});\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})   \n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \"+ e);\n        }\n    }\n\n    onEditClick(event, item) {\n        this.props.history.push(\"/user/edit\", {item: item, isAdmin: true, origin: \"/users\"});\n    }\n\n    render() {\n        Moment.locale('en');\n        if(this.state.isLoggedIn) {\n            return(\n                <div className=\"container\">\n                    <NavBar active=\"users\"/>\n                    <div className=\"container table-responsive-lg\">\n                        <h1>\n                            User List\n                        </h1>\n                        <table className=\"table table-hover\">\n                            <thead  style={{backgroundColor: \"#e3f2fd\"}}>\n                                <tr>\n                                    <th scope=\"col\">Id</th>\n                                    <th scope=\"col\">Username</th>\n                                    <th scope=\"col\">Role</th>\n                                    <th scope=\"col\">Email</th>\n                                    <th scope=\"col\">Updated By</th>\n                                    <th scope=\"col\">Updated At</th>\n                                    <th scope=\"col\">Created By</th>\n                                    <th scope=\"col\">Created At</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.items.map(function(item, index) {\n                                return <tr \n                                        onClick={(e) =>this.onEditClick(e, item)}\n                                        className=\"userListItem pointer\" \n                                        key={index} \n                                        data-toogle=\"tooltip\" data-placement=\"top\" title=\"Click to edit user\">\n                                        <th>{item.id}</th>\n                                        <td> {item.username} </td>\n                                        <td> {item.role} </td>\n                                        <td> {item.email} </td>\n                                        <td> {item.updatedBy} </td>\n                                        <td> {item.updatedAt ? Moment(item.updatedAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"} </td>\n                                        <td> {item.createdBy} </td>\n                                        <td> {item.createdAt ? Moment(item.createdAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"} </td>\n                                    </tr>\n                            }, this)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <br/>\n                    <SubmitButton\n                            text='Add User'\n                            type='btn-outline-secondary btn-lg'\n                            onClick={ () => this.props.history.push('/users/add')}\n                        />\n\n                    {this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>\n\n            );\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default AdminUsers;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport PreviousPageIcon from './PreviousPageIcon';\nimport Cookie from \"js-cookie\";\nimport {validateEmail} from './Common';\nimport {checkJwtToken} from './Common';\n\nclass AdminAddUser extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            username: '',\n            password: '',\n            email: '',\n            role: 'GUEST',\n            showError: false,\n            errormessage: null\n        }\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n    }\n\n    setInputValue(property, value) {\n        value = value.trim();\n        this.setState({\n            [property]: value\n        })\n    }\n\n    handleDropdownChange(event) {\n        this.setState({\n            role: event.target.value\n        })\n    }\n\n    async addUser() {\n        if (!this.state.username || !this.state.password || !this.state.email) {return;}\n        if(!validateEmail(this.state.email)) {\n            this.setState({errormessage: \"Not a valid email form\"})\n            this.setState({showError:true});\n            return;\n        }\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/add', {\n                method: 'post',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n\n                }),\n                body:JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email,\n                    role: this.state.role\n                })\n            })\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result)\n                    this.props.history.push('/users')\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            return (\n                <div className=\"container\">\n                <NavBar active=\"users\"/>\n                <div className='newUserContainer'>\n                    <PreviousPageIcon\n                        where=\"/users\"\n                        hist={this.props.history}\n                    />\n                    <h1 className=\"d-inline\">Add New User</h1>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                    <InputField\n                        type='text'\n                        placeholder='Enter username'\n                        value={this.state.username ? this.state.username : ''}\n                        onChange= { (value) => this.setInputValue('username', value)}\n                        label ='Username'\n                        required={true}\n                    />\n                    <InputField\n                        type='password'\n                        placeholder='Enter password'\n                        value={this.state.password ? this.state.password : ''}\n                        onChange= { (value) => this.setInputValue('password', value)}\n                        label ='Password'\n                        required={true}\n                    />\n                    <InputField\n                        type='email'\n                        placeholder='Enter email'\n                        value={this.state.email ? this.state.email : ''}\n                        onChange= { (value) => this.setInputValue('email', value)}\n                        label ='Email'\n                        maxLength=\"50\"\n                        required={true}\n                    />\n\n                    <div className=\"form-group\">\n                        <label className='col-form-label'>Role</label>\n                        <select \n                            className=\"form-control\"\n                            value={this.state.role}\n                            onChange={this.handleDropdownChange.bind(this)}>\n                            <option value=\"ADMIN\">Admin</option>\n                            <option value=\"RESEARCHER\">Researcher</option>\n                            <option value=\"GUEST\">Guest</option>\n                        </select>\n                    </div>\n\n                    <SubmitButton\n                        text='Add User'\n                        type='btn-outline-secondary'\n                        onClick={ () => this.addUser() }                        \n                    />\n                    </form>\n                </div>\n                {this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>\n            );\n            }\n            else { \n                return(\n                    <Redirect to=\"/login\" />\n                );\n            }\n        }\n}\n\nexport default AdminAddUser;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport {checkJwtToken, validateEmail} from './Common';\nimport Modal from 'react-bootstrap/Modal';\nimport PreviousPageIcon from './PreviousPageIcon';\nimport _ from 'lodash';\nimport Cookie from \"js-cookie\";\n\nclass EditUser extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn : true,\n            item: (this.props.location.state ? this.props.location.state.item : null),\n            isAdmin: (this.props.location.state ? this.props.location.state.isAdmin : false),\n            show: false,\n            showError: false,\n            errormessage: \"There are no modifications\"\n        }\n        this.replacer = this.replacer.bind(this);\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n    }\n\n    setInputValue(property, value) {\n        value = value.trim();\n        if(this.state.showError) {\n            this.setState({showError: false})\n        }\n        this.setState({ item: { ...this.state.item, [property]: value} });\n    }\n\n    handleDropdownChange(event) {\n        if(this.state.showError) {\n            this.setState({showError: false})\n        }\n        this.setState({ item: { ...this.state.item, role: event.target.value} });\n    }\n\n    replacer(key, value) {\n        if (value === null || value ==='')\n            return undefined;\n        else\n            return value;\n    }\n\n    isChanged(){\n        return !_.isEqual(this.state.item,this.props.location.state.item);\n    }\n\n    async editUser() {\n        if (!this.state.item.username || !this.state.item.email) {return;}\n        if(this.isChanged()) {\n            let url, body, username;\n            username = this.state.item.username === this.props.location.state.item.username ? null : this.state.item.username;\n            if(!validateEmail(this.state.item.email)) {\n                this.setState({errormessage: \"Not a valid email form\"})\n                this.setState({showError:true});\n                return;\n            }\n            if (this.state.isAdmin) {\n                url = process.env.REACT_APP_API_URL + '/users/update';\n                body = JSON.stringify({\n                    id: this.props.location.state.item.id,\n                    username: username,\n                    password: this.state.item.password,\n                    email: this.state.item.email,\n                    role: this.state.item.role\n                }, this.replacer);\n            } else {\n                url = process.env.REACT_APP_API_URL + '/users/me/update';\n                body = JSON.stringify({\n                    username: username,\n                    password: this.state.item.password,\n                    email: this.state.item.email\n                }, this.replacer);\n            }\n            try {\n                let response = await fetch(url, {\n                    method: 'post',\n                    headers: new Headers({\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                    }),\n                    body: body\n                })\n    \n                let result = await response.json();\n                if(result){\n                    if(result.status === 500) {\n                        this.setState({errormessage: result.message})\n                        this.setState({showError:true});\n                    }\n                    else if(result.status === 403) {\n                        this.props.history.push(\"/login\");\n                    }\n                    else {\n                        console.log(result);\n                        this.props.history.push(this.props.location.state.origin)\n                    }\n                }\n            }\n            catch(e) {\n                this.setState({errormessage: \"Cannot connect to server\"})\n                this.setState({showError:true});\n                console.log(\"Cannot connect to server. \" + e);\n            }\n        } else{\n            this.setState({showError: true});\n            this.setState({errormessage: \"There are no modifications.\"})\n        }\n    }\n\n    async deleteUser() {\n        this.setState({show: false});\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/delete?id=' + this.props.location.state.item.id, {\n                method: 'post',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                })\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else {\n                    console.log(result);\n                    this.props.history.push('/users')\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    addRoleDropdown(){\n        if(this.state.isAdmin){\n            return(\n                <div className=\"form-group\">\n                    <label className='col-form-label'>Role</label>\n                    <select\n                        className=\"form-control\"\n                        value={this.state.item.role}\n                        onChange={this.handleDropdownChange.bind(this)}>\n                        <option value=\"ADMIN\">Admin</option>\n                        <option value=\"RESEARCHER\">Researcher</option>\n                        <option value=\"GUEST\">Guest</option>\n                    </select>\n                </div>\n            )\n        }\n    }\n  \n    handleClose = () => {this.setState({show: false})};\n    handleShow = () => {this.setState({show: true})};\n\n    addModal(){\n        return(\n            <Modal show={this.state.show} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure you want to delete this user?</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <SubmitButton type=\" btn-secondary\" text=\"Close\" onClick={this.handleClose}/>\n                    <SubmitButton type=\" btn-danger\" text=\"Delete\" onClick={() => this.deleteUser()}/>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    addDeleteButton(){\n        if(this.state.isAdmin){\n            return(\n                <SubmitButton\n                text='Delete User'\n                type='btn-outline-danger btn-lg'\n                onClick={ () => {this.handleShow()} }                        \n                />\n            )\n        }\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            if(!this.state.item) {\n                return(\n                    <Redirect to=\"/home\" />\n                );\n            }\n            return (\n                <div className=\"container\">\n                <NavBar active={this.state.isAdmin ? \"users\" : \"profile\"}/>\n                <div className='editUserContainer'>\n                    <PreviousPageIcon\n                        where={this.props.location.state.origin}\n                        hist={this.props.history}\n                    />\n                    <h1 className=\"d-inline\">Edit User</h1>\n                    {this.addModal()}\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <InputField\n                            type='text'\n                            value={this.state.item.username}\n                            onChange= { (value) => this.setInputValue('username', value)}\n                            label ='Username'\n                            placeholder='Enter new username'\n                            required={true}\n                        />\n                        <InputField\n                            type='password'\n                            placeholder='Enter new password'\n                            value={this.state.item.password ? this.state.item.password : ''}\n                            onChange= { (value) => this.setInputValue('password', value)}\n                            label ='Password'\n                        />\n                        <InputField\n                            type='text'\n                            value={this.state.item.email}\n                            onChange= { (value) => this.setInputValue('email', value)}\n                            label ='Email'\n                            placeholder='Enter new email'\n                            maxLength=\"50\"\n                            required={true}\n                        />\n                        {this.addRoleDropdown()}\n                        <div className=\"btn-toolbar justify-content-between\" role=\"toolbar\">\n                            <SubmitButton\n                                text='Edit User'\n                                type='btn-outline-secondary btn-lg'\n                                onClick={ () => this.editUser() }\n                            />\n                            {this.addDeleteButton()}\n                        </div>\n                    </form>\n                    { this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>\n                </div>\n            );            \n        }\n            else { \n                return(\n                    <Redirect to=\"/login\" />\n                );\n            }\n    }\n}\n\nexport default EditUser;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport SubmitButton from './SubmitButton';\nimport Moment from 'moment';\nimport {checkJwtToken} from './Common';\nimport Cookie from \"js-cookie\";\n\nclass Profile extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            item: [],\n            showError: false,\n            errormessage: null\n        }\n        this.onEditClick = this.onEditClick.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({isLoggedIn: await checkJwtToken()});\n        this.getUser();\n    }\n\n    async getUser() {\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/me?username=' + localStorage.getItem(\"username\"), {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n\n                })\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else {\n                    console.log(result);\n                    this.setState({item: result});\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    onEditClick(event) {\n        this.props.history.push(\"/user/edit\", {item: this.state.item, isAdmin: false, origin: \"/profile\"});\n    }\n\n    checkIfUpdated() {\n        if(this.state.item.updatedAt) {\n            return(\n                <div className=\"col\">\n                    <p className=\"card-text\">Updated By: {this.state.item.updatedBy}</p>\n                    <p className=\"card-text\">Updated At: {this.state.item.updatedAt ? Moment(this.state.item.updatedAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"}</p>\n                    <p className=\"card-text\">Created By: {this.state.item.createdBy}</p>\n                    <p className=\"card-text\">Created At: {this.state.item.createdAt ? Moment(this.state.item.createdAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"}</p>\n                </div>\n            );\n        } else {\n            return(\n                <div className=\"col\">\n                    <p className=\"card-text\">Created By: {this.state.item.createdBy}</p>\n                    <p className=\"card-text\">Created At: {this.state.item.createdAt ? Moment(this.state.item.createdAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"}</p>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        Moment.locale('en');\n        if(this.state.isLoggedIn) {\n            return(\n                <div className=\"container\">\n                    <NavBar active=\"profile\"/>\n                    <div className=\"container\">\n                        <div className=\"card mt-4\">\n                            <h5 className=\"card-header\" style={{backgroundColor: \"#e3f2fd\"}}>User Profile</h5>\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <p className=\"card-text\">Username: {this.state.item.username}</p>\n                                        <p className=\"card-text\">Email: {this.state.item.email}</p>\n                                        <p className=\"card-text\">Role: {this.state.item.role}</p>\n                                    </div>\n                                    {this.checkIfUpdated()}\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n                    <br/>\n                    <SubmitButton\n                            text='Edit'\n                            type='btn-outline-secondary btn-lg'\n                            onClick={ (e) => this.onEditClick(e)}\n                        />\n                    {this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>\n            );\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport SubmitButton from './SubmitButton';\nimport {checkJwtToken} from './Common';\nimport Moment from 'moment';\nimport Modal from 'react-bootstrap/Modal';\nimport Cookie from \"js-cookie\";\nimport EllipsisText from \"react-ellipsis-text\";\n\nclass Alignments extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            items: [],\n            show: false,\n            showError: false,\n            errormessage: null\n        }\n        this.viewAlignment = this.viewAlignment.bind(this);\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n        this.getAlignments();\n    }\n\n\n    async getAlignments() {\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/align/list', {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n\n                })\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.setState({items: result});\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    handleClose = () => {this.setState({show: false})};\n    handleShow = () => {this.setState({show: true})};\n\n    addModal() {\n        return (\n          <>\n            <Modal \n                show={this.state.show} \n                onHide={this.handleClose}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Choose an aligner</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <div className=\"container\">\n                    <div className=\"row d-flex justify-content-around\">\n                        <div className=\"p-2\">\n                            <button type=\"button\" className=\"btn btn-light btn-sq\" style={{backgroundColor: \"#e3f2fd\"}}\n                                onClick={() => this.props.history.push(\"/alignments/add\", {aligner: \"Bowtie\"})}>\n                                Bowtie\n                            </button>\n                        </div>\n                        <div className=\"p-2\">\n                            <button type=\"button\" className=\"btn btn-light btn-sq\" style={{backgroundColor: \"#e3f2fd\"}}\n                                onClick={() => this.props.history.push(\"/alignments/add\", {aligner: \"Bwa\"})}>\n                                BWA\n                            </button>\n                        </div>\n                        <div className=\"p-2\">\n                            <button type=\"button\" className=\"btn btn-light btn-sq\" style={{backgroundColor: \"#e3f2fd\"}}\n                                onClick={() => this.props.history.push(\"/alignments/add\", {aligner: \"Snap\"})}>\n                                Snap\n                            </button>\n                        </div>\n                    </div>\n                  </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <SubmitButton type=\" btn-secondary btn-lg\" text=\"Close\" onClick={this.handleClose}/>\n                </Modal.Footer>\n            </Modal>\n          </>\n        );\n      }\n\n    viewAlignment(event, item) {\n        this.props.history.push(\"/alignments/igv\", {item: item});\n    }\n\n    getBaseHtml() {\n        return (\n            <div className=\"container table-responsive-lg\">\n                <h1>\n                    Alignments\n                </h1>\n                {this.addModal()}\n                <br/>\n                <table className=\"table table-hover\">\n                    <thead style={{backgroundColor: \"#e3f2fd\"}}>\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Aligner</th>\n                            <th scope=\"col\">Description</th>\n                            <th scope=\"col\">Owner</th>\n                            <th scope=\"col\">Visibility</th>\n                            <th scope=\"col\">Updated By</th>\n                            <th scope=\"col\">Updated At</th>\n                            <th scope=\"col\">Created At</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.items.map(function(item, index) {\n                        return <tr \n                                key={index} \n                                onClick={(e) =>this.viewAlignment(e, item)}\n                                data-toogle=\"tooltip\" data-placement=\"top\" title=\"Click to view alignment\">\n                                <th>{item.name}</th>\n                                <td> {item.aligner} </td>\n                                <td><EllipsisText text={item.description} length={100} /></td>\n                                <td> {item.owner} </td>\n                                <td> {item.visibility} </td>\n                                <td> {item.updatedBy} </td>\n                                <td> {item.updatedAt ? Moment(item.updatedAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"} </td>\n                                <td> {item.createdAt ? Moment(item.createdAt).format(\"YYYY.MM.DD. HH:mm\") : \"\"} </td>\n                            </tr>\n                    }, this)}\n                    </tbody>\n                </table>\n            </div>);\n    }\n\n    render() {\n        Moment.locale('en');\n        let role = localStorage.getItem(\"role\");\n        if(this.state.isLoggedIn) {\n            return(\n                <div className=\"container\">\n                    <NavBar active=\"alignments\"/>\n                    {this.getBaseHtml()}\n                    <br/>\n                    {role === \"ADMIN\" || role === \"RESEARCHER\" ?\n                    <SubmitButton\n                            text='Create alignment'\n                            type='btn-lg btn-outline-secondary'\n                            onClick={ () => this.handleShow()}\n                        /> : null }\n\n                    {this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>);\n\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default Alignments;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport SubmitButton from './SubmitButton';\nimport InputField from './InputField';\nimport {checkJwtToken} from './Common';\nimport PreviousPageIcon from './PreviousPageIcon';\nimport { Multiselect } from 'react-widgets';\nimport Cookie from \"js-cookie\";\n\nclass CreateAlignment extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            referenceFile: null,\n            readFile: [\n                {\n                    name: null,\n                    file: [],\n                    radio: \"specific\",\n                    specific: 1,\n                    mismatch: 2,\n                    penalty: [4,6,1],\n                    maxHits: 300,\n                    maxDist: 8\n                }\n            ],\n            name: '',\n            description: '',\n            visibility: 'PUBLIC',\n            referencId: null,\n            refType: \"example\",\n            references: [],\n            userAccess: [],\n            usernames: [],\n            trackCount: 1,\n            aligner: this.props.location.state.aligner ? this.props.location.state.aligner : \"Bowtie\",\n            showError: false,\n            errormessage: null,\n            isLoading: false,\n            acceptedFormat: this.props.location.state.aligner === \"Snap\" ? \".fastq,.fq\"  : \".fastq,.fq,.fasta,.fna,.fa\" ,\n        }\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({isLoggedIn: await checkJwtToken()});\n        this.getReferences();\n        this.getUsernames();\n    }\n\n    onChangeHandler(event, file){\n        this.setState({\n            [file]: event.target.files[0],\n            loaded: 0,\n        });\n    }\n\n    onClickHandler(event){\n        if(!this.state.name || this.state.readFile.length === 1 ) {return;}\n        let data = new FormData();\n        if(!this.state.referenceFile && this.state.refType ===\"upload\") {return;}\n        else if(this.state.refType !==\"upload\" && !this.state.referencId) {\n            this.setState({showError: true});\n            this.setState({errormessage: \"Please choose reference genome or upload one.\"})\n            return;\n        }\n        if(this.state.referenceFile)\n            data.append('referenceDna', this.state.referenceFile);\n        for (let x = 0; x < this.state.readFile.length-1; x++) {\n            if(!this.state.readFile[x].name || !this.state.readFile[x].file[0]) {return;}\n            let isPaired = this.state.readFile[x].file.length === 2;\n            data.append(\"readsForDna[\" + x + \"].name\", this.state.readFile[x].name);\n            data.append(\"readsForDna[\" + x + \"].isPaired\", isPaired);\n            data.append(\"readsForDna[\" + x + \"].read1\", this.state.readFile[x].file[0]);\n            if(isPaired)\n                data.append(\"readsForDna[\" + x + \"].read2\", this.state.readFile[x].file[1]);\n            if(this.state.aligner === \"Bowtie\") {\n                data.append(\"readsForDna[\" + x + \"].validCount\", this.state.readFile[x].radio !== \"specific\" ? this.state.readFile[x].radio : this.state.readFile[x].specific );\n                data.append(\"readsForDna[\" + x + \"].mismatch\", this.state.readFile[x].mismatch);\n            }\n            else if(this.state.aligner ===\"Bwa\")\n                data.append(\"readsForDna[\" + x + \"].penalties\", this.state.readFile[x].penalty);\n            else if(this.state.aligner ===\"Snap\") {\n                data.append(\"readsForDna[\" + x + \"].maxDist\", this.state.readFile[x].maxDist);\n                data.append(\"readsForDna[\" + x + \"].maxHits\", this.state.readFile[x].maxHits);\n            }\n        }\n        data.append(\"name\", this.state.name);\n        data.append(\"description\", this.state.description);\n        data.append(\"aligner\", this.state.aligner.toUpperCase());\n        data.append(\"visibility\", this.state.visibility);\n        data.append(\"usernameAccessList\", this.state.userAccess);\n        if(this.state.referencId != null)\n            data.append(\"referenceId\", this.state.referencId);\n        this.setState({isLoading: true});\n        this.upload(data);\n    }\n\n    async upload(data){\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/align', {\n                method: 'post',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                }),\n                body: data\n            }).catch(error =>  {\n                this.setState({errormessage: \"Cannot connect to server\"})   \n                this.setState({showError:true});\n                this.setState({isLoading: false});\n                console.log(\"Cannot connect to server\");\n            })\n\n            let result = await response.json();\n            if(result){\n                this.setState({isLoading: false});\n                if(result.status === 500) {\n                    if(result.message.includes(\"Maximum upload size exceeded\")){\n                        let max = result.message.substring(result.message.lastIndexOf(\"(\")+1, result.message.length-1);\n                        this.setState({errormessage: \"Maximum upload size (\" + max/1000000 + \"MB) exceeded.\"})\n                    }\n                    else if(result.message === \"Wrong file type\")\n                    this.setState({errormessage: result.message + \", please upload reference genome in FASTA format and readfiles with one of the following extensions: \" + this.state.acceptedFormat})\n                    else\n                        this.setState({errormessage: result.message})   \n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.props.history.push(\"/alignments/igv\", {item : result});\n                }\n            }\n        }\n        catch(e) {\n            this.setState({isLoading: false});\n            this.setState({errormessage: \"Cannot connect to server\"})   \n            this.setState({showError:true});\n            this.setState({isLoading: false});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    };\n\n    handleDropdownChange(event) {\n        this.setState({\n            visibility: event.target.value\n        })\n    }\n\n    onRadioChange(event) {\n        this.setState({\n          refType: event.currentTarget.value,\n          referencId: null\n          });\n    }\n\n    showReferenceUpload(){\n        return(\n            <div className=\"form-group\">\n                <h4 className=\"mt-1 mb-0\">Reference DNA file</h4>\n                <br/>\n                <input className=\"form-control-title\" id=\"referenceFile\" style={{\"display\":\"none\"}} type=\"file\" accept=\".fasta,.fna,.fa\"  required onChange={ (e) => this.onChangeHandler(e, \"referenceFile\")}/>\n                <label className=\"pointer\" htmlFor=\"referenceFile\">\n                    <span className=\"fileInput\">Choose file</span>\n                    {console.log(this.state.referenceFile)}\n                    {this.state.referenceFile === null ? \" No file chosen\" : this.state.referenceFile.name}\n                </label>\n            </div>\n        );\n    }\n\n    async getReferences(){\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/align/referencelist', {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                })\n            }).catch(error =>  {\n                this.setState({errormessage: \"Cannot connect to server\"})   \n                this.setState({showError:true});\n                console.log(\"Cannot connect to server\");\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})   \n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.setState({references: result});\n                } \n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})   \n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    showReferenceExample(){\n        let btnclass = \"btn btn-light \";\n        return(\n            <div className=\"container\">\n                <div className=\"row d-flex justify-content-around\">\n                    {this.state.references.map(function(item, index) {\n                            return <div className=\"p-2\" key={index}>\n                                <button type=\"button\" style={{backgroundColor: \"#e3f2fd\"}}\n                                className={this.state.referencId === item.id ? btnclass+'active' : btnclass}\n                                onClick={() => this.setState({referencId: item.id})}\n                                data-toogle=\"tooltip\" data-placement=\"top\" title={item.description}>\n                                {item.name}\n                                </button>\n                            </div>\n                    }, this)}\n                </div>\n            </div>\n        );\n    }\n\n    async getUsernames(){\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/usernamelist', {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                })\n            }).catch(error =>  {\n                this.setState({errormessage: \"Cannot connect to server\"})   \n                this.setState({showError:true});\n                console.log(\"Cannot connect to server\");\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})   \n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.setState({usernames: result.usernames});\n                } \n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})   \n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    addUserAccessList(){\n        if(this.state.visibility === \"PRIVATE\" || this.state.visibility === \"PRIVATE_GROUP\") {\n            if(this.state.usernames && this.state.usernames.length > 0) {\n                return(\n                    <div>\n                        <label htmlFor=\"userSelect\">View permission for users: </label>\n                            <Multiselect\n                                data={this.state.usernames}\n                                value={this.state.userAccess}\n                                onChange={value => {this.setState({ userAccess: value })}}\n                            />\n                    </div>\n                )\n            }\n        }\n    }\n\n    setValueForRead(property, value, index) {\n        let reads = [...this.state.readFile];\n        let read = {...reads[index]};\n        if(property === \"name\")\n            read.name = value;\n        else if (property === \"file\") {\n            if(value.length > 2) {\n                this.setState({errormessage: \"Maximum two files per track\"})   \n                this.setState({showError:true});\n                return;\n            }\n            else { \n                this.setState({showError:false});\n                read.file = value;\n            } \n        }\n        else if (property === \"radio\") {\n            if(value === \" --best\")\n                read.radio += value;\n            else\n                read.radio = value;\n        }\n        else if (property === \"specific\")\n            read.specific = value;\n        else if (property === \"mismatch\")\n            read.mismatch = value;\n        else if(property === \"penaltyMis\")\n            read.penalty[0] = value;\n        else if(property === \"penaltyGapOpen\")\n            read.penalty[1] = value;\n        else if(property === \"penaltyGapExt\")\n            read.penalty[2] = value;\n        else if (property === \"maxdist\")\n            read.maxDist = value;\n        else if(property === \"maxhits\")\n            read.maxHits = value;\n        reads[index] = read;\n        if(read.name === \"\" && read.file.length === 0 && index+1 < reads.length) {\n            reads.splice(index, 1);\n            console.log(reads);\n            this.setState({trackCount: this.state.trackCount-1});\n        }\n        if(read.name !== null && read.file.length > 0 && index+1 === reads.length) {\n            this.setState({trackCount: this.state.trackCount+1});\n            let newRead = {...reads[index+1]};\n            newRead.name = null;\n            newRead.file = [];\n            newRead.specific = 1;\n            newRead.radio = \"specific\";\n            newRead.mismatch = 2;\n            newRead.penalty = [4,6,1];\n            newRead.maxDist = 8;\n            newRead.maxHits = 300;\n            reads[index+1] = newRead;\n        }\n        this.setState({readFile: reads});\n    }\n\n    addOptions(i){\n        if(this.state.aligner === \"Bowtie\") {\n            return(<>\n                <td> \n                <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name={\"inlineRadioOptions\"+i} \n                        checked={this.state.readFile[i].radio !== \"specific\"} \n                        value=\"all\"\n                        onChange={(e) => this.setValueForRead(\"radio\", e.currentTarget.value, i)}/>\n                    <label className=\"form-check-label mr-2\">all</label> \n                    <input type=\"checkbox\" className=\"form-check-input\" value=\" --best\" name={\"inlineCheckBox\"+i}\n                        onChange={(e) => this.setValueForRead(\"radio\", e.currentTarget.value, i)}\n                        disabled={this.state.readFile[i].radio === \"specific\"}\n                        />\n                    <label className=\"form-check-label\">best-to-worst</label>\n                </div>\n                <div className=\"form-check-inline\">\n                    <input className=\"form-check-input\" type=\"radio\" name={\"inlineRadioOptions\"+i} \n                        checked={this.state.readFile[i].radio === \"specific\"} \n                        value=\"specific\"\n                        onChange={(e) => this.setValueForRead(\"radio\", e.currentTarget.value, i)}/>\n                    <label className=\"form-check-label mr-2\">number: </label>\n                    <input type=\"number\" min=\"1\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].specific} \n                        onChange= { (e) => this.setValueForRead(\"specific\", e.target.value, i)}\n                        disabled={this.state.readFile[i].radio !== \"specific\"}\n                        /> \n                </div>\n                </td>\n                <td>\n                    <input type=\"number\" min=\"0\" max=\"3\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].mismatch} \n                        onChange= { (e) => this.setValueForRead(\"mismatch\", e.target.value, i)}\n                    /> \n                </td>\n                </>\n            )\n        }\n        else if(this.state.aligner === \"Bwa\") {\n            return(<>\n                <td data-toogle=\"tooltip\" data-placement=\"top\" title=\"Note: if your reads are <70bp the default values are: 3, 11, 4\">\n                    <input type=\"number\" min=\"0\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].penalty[0]} \n                        onChange= { (e) => this.setValueForRead(\"penaltyMis\", e.target.value, i)}\n                    /> \n                </td>\n                <td data-toogle=\"tooltip\" data-placement=\"top\" title=\"Note: if your reads are <70bp the default values are: 3, 11, 4\">\n                    <input type=\"number\" min=\"0\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].penalty[1]} \n                        onChange= { (e) => this.setValueForRead(\"penaltyGapOpen\", e.target.value, i)}\n                    /> \n                </td>\n                <td data-toogle=\"tooltip\" data-placement=\"top\" title=\"Note: if your reads are <70bp the default values are: 3, 11, 4\">\n                    <input type=\"number\" min=\"0\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].penalty[2]} \n                        onChange= { (e) => this.setValueForRead(\"penaltyGapExt\", e.target.value, i)}\n                    /> \n                </td>\n            </>);\n        }\n        else if(this.state.aligner === \"Snap\") {\n            return(<>\n                <td data-toogle=\"tooltip\" data-placement=\"top\" title=\"Note: for paired-end reads the default is: 16000\">\n                    <input type=\"number\" min=\"10\" max=\"30000\" length=\"5\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].maxHits} \n                        onChange= { (e) => this.setValueForRead(\"maxhits\", e.target.value, i)}\n                    /> \n                </td>\n                <td>\n                    <input type=\"number\" min=\"0\" length=\"2\" style={{\"width\":\"50px\"}}\n                        value={this.state.readFile[i].maxDist} \n                        onChange= { (e) => this.setValueForRead(\"maxdist\", e.target.value, i)}\n                    /> \n                </td>\n            </>);\n        }\n    }\n\n    addOptionNames(){\n        if(this.state.aligner===\"Bowtie\") {\n            return(<>\n            <th scope=\"col\">Report valid alignments</th>\n            <th scope=\"col\">Most mismatches(0-3)</th>\n            </>);\n        }\n        else if(this.state.aligner ===\"Bwa\") {\n            return(<>\n                <th scope=\"col\">Mismatch penalty</th>\n                <th scope=\"col\">Gap open penalty</th>\n                <th scope=\"col\">Gap extension penalty</th>\n                </>);\n        }\n        else if(this.state.aligner ===\"Snap\") {\n            return(<>\n                <th scope=\"col\">Maximum Hits</th>\n                <th scope=\"col\">Maximum Distance</th>\n                </>);\n        }\n    }\n\n    addTrackInputs(){\n        var tracks = [];\n        for(let i=0; i < this.state.trackCount; i++) {\n            tracks.push(<tr \n                key={i} >\n                <th>{i+1}</th>\n                <td> <input id={\"readfileInput\" + i} className=\"form-control-title pr-0\" style={{\"display\":\"none\"}} type=\"file\" accept={this.state.acceptedFormat}\n                    required={this.state.trackCount === 1 || this.state.trackCount>i+1}\n                    multiple onChange={ (e) => {this.setValueForRead(\"file\", e.target.files, i)}}/>\n                    <label htmlFor={\"readfileInput\" + i} style={{\"width\":\"230px\"}} className=\"pointer\">\n                        <span className=\"fileInput\">Choose Files</span> {this.state.readFile[i].file.length > 1 ? \"2 files chosen\" : (this.state.readFile[i].file.length === 0 ? \"No file chosen\" : this.state.readFile[i].file[0].name)}\n                    </label>\n                </td>\n                <td> <input className=\"form-control\"\n                        type='text' style={{\"width\":\"120px\"}}\n                        value={this.state.readFile[i].name ? this.state.readFile[i].name : \"\"}\n                        onChange= { (e) => this.setValueForRead(\"name\", e.target.value, i)}\n                        placeholder ='Name'\n                        maxLength=\"12\"\n                        required={this.state.trackCount === 1 || this.state.trackCount>i+1}\n                        /> \n                </td>\n                {this.addOptions(i)}\n            </tr>);\n        }\n        return(<table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Track</th>\n                        <th scope=\"col\">Files</th>\n                        <th scope=\"col\">Name</th>\n                        {this.addOptionNames()}\n                    </tr>\n                </thead>\n                <tbody>\n                {tracks}\n                </tbody>\n             </table>);\n    }\n\n    handleClose = () => {this.setState({isLoading: false})};\n\n    addModal(){\n        if(this.state.isLoading){\n            return(\n                    <div className=\"loading\">Loading&#8230;</div>\n            )\n        }\n    }\n\n    nameChangeHandler(value){\n        if(this.state.showError && this.state.errormessage === \"Alignment name already exists, please choose an other one.\") {\n            this.setState({showError:false});\n        }\n        this.setState({name: value});\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            return(\n                <div className=\"container\">\n                    <NavBar active=\"alignments\"/>\n                    <div className=\"container\">\n                        <PreviousPageIcon\n                            where=\"/alignments\"\n                            hist={this.props.history}\n                        />\n                        <h1 className=\"d-inline\"> Create new alignment with {this.state.aligner}</h1>\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <InputField\n                                type='text'\n                                value={this.state.name}\n                                onChange= { (value) => this.nameChangeHandler(value)}\n                                label ='Name'\n                                maxLength=\"20\"                        \n                                required={true}\n                            />\n                            <div className=\"form-group\">\n                                <label >Description (optional)</label>\n                                <textarea \n                                    value={this.state.description} \n                                    className=\"form-control\" \n                                    rows=\"4\" maxLength='1000' \n                                    onChange= { (event) => this.setState({description: event.target.value})}>\n                                </textarea>\n                            </div>\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" value=\"example\" id=\"exampleRef\"\n                                    checked={this.state.refType === \"example\"}\n                                    onChange={(e) => this.onRadioChange(e)}/>\n                                <label className=\"form-check-label\" htmlFor=\"exampleRef\">Choose reference dna</label>\n                            </div>\n                            <div className=\"form-check form-check-inline\">\n                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" value=\"upload\" id=\"uploadRef\"\n                                checked={this.state.refType === \"upload\"}\n                                onChange={(e) => this.onRadioChange(e)}/>\n                                <label className=\"form-check-label\" htmlFor=\"uploadRef\">Upload reference dna</label>\n                            </div>\n                            {this.state.refType === \"upload\" ? this.showReferenceUpload() : this.showReferenceExample()}\n                            <h4>Read files</h4>\n                            <p>Select one file for single end read, two for paired end reads</p>\n                            <div className=\"container table-responsive-lg\">\n                                {this.addTrackInputs()}\n                            </div>\n                            <div className=\"form-group\">\n                                <label className='col-form-label'>Visibility</label>\n                                <select \n                                    className=\"form-control\"\n                                    value={this.state.visibility}\n                                    onChange={(e) => this.handleDropdownChange(e)}>\n                                    <option value=\"PUBLIC\">Public</option>\n                                    <option value=\"PRIVATE\">Private</option>\n                                    <option value=\"PRIVATE_GROUP\">Private Group</option>\n                                </select>\n                            </div>\n                            {this.addUserAccessList()}\n                            <br/>\n                            <div className=\"d-flex justify-content-start\">\n                                <SubmitButton\n                                        text='CREATE'\n                                        type='btn-outline-secondary btn-lg'\n                                        onClick={ (e) => this.onClickHandler(e)}\n                                        //disabled={this.state.showError}\n                                    />\n                                {this.state.showError ? <div className=\"alert alert-primary ml-2\" role=\"alert\">{this.state.errormessage}</div> : null }\n                            </div>\n                        </form>\n                    </div>  \n                    {this.addModal()}\n                </div>\n\n            );\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default CreateAlignment;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport {checkJwtToken} from './Common';\nimport Modal from 'react-bootstrap/Modal';\nimport PreviousPageIcon from './PreviousPageIcon';\nimport _ from 'lodash';\nimport { Multiselect } from 'react-widgets';\nimport Cookie from \"js-cookie\";\n\nclass EditUser extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: true,\n            item: (this.props.location.state ? this.props.location.state.item : null),\n            show: false,\n            showError: false,\n            errormessage: null,\n            username: []\n        }\n    }\n\n    setInputValue(property, value) {\n        if(this.state.showError) {\n            this.setState({showError: false})\n        }\n        this.setState({ item: { ...this.state.item, [property]: value} });\n    }\n\n    handleDropdownChange(event) {\n        if(this.state.showError) {\n            this.setState({showError: false})\n        }\n        this.setState({ item: { ...this.state.item, visibility: event.target.value} });\n    }\n\n    replacer(key, value) {\n        if (value === null || value ==='' )\n            return undefined;\n        else\n            return value;\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n        this.getUsernames();\n    }\n\n    isChanged(){\n        return !_.isEqual(this.state.item,this.props.location.state.item);\n    }\n\n    async editAlignment() {\n        if(this.isChanged()){\n            try {\n                let response = await fetch(process.env.REACT_APP_API_URL + '/align/update', {\n                    method: 'post',\n                    headers: new Headers({\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                        \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                    }),\n                    body: JSON.stringify({\n                        id: this.state.item.id,\n                        name: this.state.item.name,\n                        visibility: this.state.item.visibility,\n                        description: this.state.item.description,\n                        usernameAccessList: this.state.item.userAccess\n                    }, this.replacer)\n                })\n                console.log(\"bu\");\n    \n                let result = await response.json();\n                if(result){\n                    if(result.status === 500) {\n                        this.setState({errormessage: result.message})\n                        this.setState({showError:true});\n                    }\n                    else if(result.status === 403) {\n                        this.props.history.push(\"/login\");\n                    }\n                    else{\n                        console.log(result);\n                        this.props.history.push('/alignments/igv', {item: result})\n                    }\n                }\n            }\n            catch(e) {\n                this.setState({errormessage: \"Cannot connect to server\"})\n                this.setState({showError:true});\n                console.log(\"Cannot connect to server. \" + e);\n            }\n        }else {\n            this.setState({showError: true});\n            this.setState({errormessage: \"There are no modifications\"});\n        }\n    }\n\n    async deleteAlignment() {\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/align/delete?id=' + this.props.location.state.item.id, {\n                method: 'post',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n\n                })\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                    this.props.history.push('/alignments')\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    async getUsernames(){\n        try {\n            let response = await fetch(process.env.REACT_APP_API_URL + '/users/usernamelist', {\n                method: 'get',\n                headers: new Headers({\n                    'Accept': 'application/json',\n                    \"Authorization\": 'Bearer ' + Cookie.get(\"jwtToken\")\n                })\n            })\n\n            let result = await response.json();\n            if(result){\n                if(result.status === 500) {\n                    this.setState({errormessage: result.message})\n                    this.setState({showError:true});\n                }\n                else if(result.status === 403) {\n                    this.props.history.push(\"/login\");\n                }\n                else{\n                    console.log(result);\n                this.setState({usernames: result.usernames});\n                }\n            }\n        }\n        catch(e) {\n            this.setState({errormessage: \"Cannot connect to server\"})\n            this.setState({showError:true});\n            console.log(\"Cannot connect to server. \" + e);\n        }\n    }\n\n    handleClose = () => {this.setState({show: false})};\n    handleShow = () => {this.setState({show: true})};\n\n    addModal(){\n        return(\n            <Modal show={this.state.show} onHide={this.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure you want to delete this alignment?</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <SubmitButton type=\" btn-secondary\" text='Close' onClick={this.handleClose}/>\n                    <SubmitButton type=\" btn-danger\" text=\"Delete\" onClick={() => this.deleteAlignment()}/>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    addUserAccessList(){\n        if(this.state.item.visibility === \"PRIVATE\" || this.state.item.visibility === \"PRIVATE_GROUP\") {\n            if(this.state.usernames && this.state.usernames.length > 0) {\n                return(\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"userSelect\">View permission for users: </label>\n                            <Multiselect\n                                data={this.state.usernames}\n                                value={this.state.item.userAccess}\n                                onChange={value => {this.setState({ item: { ...this.state.item, userAccess : value} })}}\n                            />\n                    </div>\n                )\n            }\n        }\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            if(!this.state.item) {\n                return(\n                    <Redirect to=\"/alignments\" />\n                );\n            }\n            return (\n                <div className=\"container\">\n                <NavBar active=\"alignments\"/>\n                <div className='container'>\n                    <PreviousPageIcon\n                        where={'/alignments/igv'}\n                        item = {this.state.item}\n                        hist={this.props.history}\n                    />\n                    <h1 className=\"d-inline\">Edit Alignment</h1>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        {this.addModal()}\n                        <InputField\n                            type='text'\n                            value={this.state.item.name}\n                            onChange= { (value) => this.setInputValue('name', value)}\n                            label ='Name'\n                            required={true}\n                        />\n                        <div className=\"form-group\">\n                            <label >Description (optional)</label>\n                            <textarea \n                                value={this.state.item.description} \n                                className=\"form-control\" \n                                rows=\"4\" maxLength='1000' \n                                onChange= { (event) => this.setInputValue('description', event.target.value)}>\n                            </textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className='col-form-label'>Visibility</label>\n                            <select \n                                className=\"form-control\"\n                                value={this.state.item.visibility}\n                                onChange={this.handleDropdownChange.bind(this)}>\n                                <option value=\"PUBLIC\">Public</option>\n                                <option value=\"PRIVATE\">Private</option>\n                                <option value=\"PRIVATE_GROUP\">Private Group</option>\n                            </select>\n                        </div>\n                        {this.addUserAccessList()}\n                        <div className=\"btn-toolbar justify-content-between\" role=\"toolbar\">\n                            <SubmitButton\n                                text='Edit Alignment'\n                                type='btn-outline-secondary btn-lg'\n                                onClick={ () => this.editAlignment() }                        \n                            />\n                            <SubmitButton\n                                text='Delete Alignment'\n                                type='btn-outline-danger btn-lg'\n                                onClick={ () => {this.handleShow()} }                       \n                            />\n                        </div>\n                    </form>\n                { this.state.showError ? <div className=\"alert alert-primary mt-3\" role=\"alert\">{this.state.errormessage}</div> : null }\n                </div>\n                </div>\n            );\n        }\n            else { \n                return(\n                    <Redirect to=\"/login\" />\n                );\n            }\n    }\n}\n\nexport default EditUser;","import React from 'react';\nimport NavBar from './NavBar';\nimport { Redirect } from 'react-router-dom';\nimport {checkJwtToken} from './Common';\n\nclass NotFound extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoggedIn : true,\n        }\n    }\n\n    async componentDidMount(){\n        this.setState({isLoggedIn: await checkJwtToken()});\n    }\n\n    render() {\n        if(this.state.isLoggedIn) {\n            return(<>\n                <NavBar/>\n                <div className=\"container\">\n                    <h2>Not found</h2>\n                    <p>Sorry this page is not available. Please select page from the menu.</p>\n                </div>\n                </>\n            );\n        }\n        else { \n            return(\n                <Redirect to=\"/login\" />\n            );\n        }\n    }\n}\n\nexport default NotFound;","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport LoginForm from \"./LoginForm\";\nimport IgvBrowser from \"./IgvBrowser\";\nimport Home from \"./Home\";\nimport AdminUsers from \"./AdminUsers\";\nimport AdminAddUser from \"./AdminAddUser\";\nimport EditUser from \"./EditUser\";\nimport Profile from \"./Profile\";\nimport Alignments from \"./Alignments\";\nimport CreateAlignment from \"./CreateAlignment\";\nimport EditAlignment from \"./EditAlignment\";\nimport NotFound from \"./NotFound\";\n\n\nexport default function Routes() {\n  if(JSON.parse(localStorage.getItem(\"isLoggedIn\"))) {\n    let role = localStorage.getItem(\"role\");\n    if(role === \"ADMIN\") {\n      return (\n        <Switch>\n                <Route path=\"/login\" component={LoginForm} />\n                <Route path='/alignments/igv' component={IgvBrowser} />\n                <Route path='/home' component={Home} />\n                <Route path='/users/add' component={AdminAddUser} />\n                <Route path='/user/edit' component={EditUser} />\n                <Route path='/users' component={AdminUsers} />\n                <Route path='/profile' component={Profile} />\n                <Route path='/alignments/edit' component={EditAlignment} />\n                <Route path='/alignments/add' component={CreateAlignment} />\n                <Route path='/alignments' component={Alignments} />\n                <Redirect exact from=\"/\" to=\"home\" />\n                <Route component={NotFound} />\n        </Switch>\n      );\n    } else if (role === \"RESEARCHER\") {\n      return (\n        <Switch>\n                <Route path=\"/login\" component={LoginForm} />\n                <Route path='/alignments/igv' component={IgvBrowser} />\n                <Route path='/home' component={Home} />\n                <Route path='/profile' component={Profile} />\n                <Route path='/user/edit' component={EditUser} />\n                <Route path='/alignments/edit' component={EditAlignment} />\n                <Route path='/alignments/add' component={CreateAlignment} />\n                <Route path='/alignments' component={Alignments} />\n                <Redirect exact from=\"/\" to=\"home\" />\n                <Route component={NotFound} />\n        </Switch>\n      );\n    } else {\n      return (\n        <Switch>\n                <Route path=\"/login\" component={LoginForm} />\n                <Route path='/alignments/igv' component={IgvBrowser} />\n                <Route path='/home' component={Home} />\n                <Route path='/profile' component={Profile} />\n                <Route path='/user/edit' component={EditUser} />\n                <Route path='/alignments' component={Alignments} />\n                <Redirect exact from=\"/\" to=\"home\" />\n                <Route component={NotFound} />\n        </Switch>\n      );\n    }\n\n  } else {\n    return (\n      <Switch>\n              <Route path=\"/login\" component={LoginForm} />\n              <Route path='/alignments/igv' component={IgvBrowser} />\n              <Route path='/home' component={Home} />\n              <Route path='/users/add' component={AdminAddUser} />\n              <Route path='/user/edit' component={EditUser} />\n              <Route path='/users' component={AdminUsers} />\n              <Route path='/profile' component={Profile} />\n              <Route path='/alignments/edit' component={EditAlignment} />\n              <Route path='/alignments/add' component={CreateAlignment} />\n              <Route path='/alignments' component={Alignments} />\n              <Redirect from=\"*\" to=\"/login\" />\n      </Switch>\n    );\n  }\n}\n\n","import React from 'react';\nimport { observer } from \"mobx-react\";\nimport Routes from \"./Routes\";\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport './font-awesome-4.7.0/css/font-awesome.min.css';\n\nclass App extends React.Component{\n    render() {\n        return(\n            <div className=\"app\">\n                    <Routes />\n            </div>\n        );\n    }\n}\n\nexport default observer(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}